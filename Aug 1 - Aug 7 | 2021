/* Typed Arrays - Data Structures
Decide how much memory to give an array in advance */

var byteSize = 64;
var buffer = new ArrayBuffer(64);
var i32View = new Int32Array(buffer);

/* Learn how a Stack Works - Data Structures
Last-In-First-Out type of service.
Here we remove the last element in an array and replace it */

var homeworkStack = ["BIO12","HIS80","MAT122","PSY44"];

homeworkStack.pop();
homeworkStack.push("CS50");

/* Create a Stack Class - Data Structures
Adding useful stack methods to our Stack class */

function Stack() {
  var collection = [];
  this.print = function() {
    console.log(collection);
  };

  this.push = function(element) {
    // pushes element to top of stack
    return collection.push(element);
  };

  this.pop = function() {
    // removes and returns the element on top of the stack
    return collection.pop();
  };

  this.peek = function() {
    // looks at the top element in the stack
    return collection[collection.length - 1];
  };

  this.isEmpty = function() {
    // checks if the stack is empty
    return collection.length === 0;
  };

  this.clear = function() {
    // removes all elements from the stack
    return collection.length = 0;
  };
}

